<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.realworld.conduit.infrastructure.mybatis.mapper.ArticleMapper">
  <sql id="profileColumns">
    U.id userId,
    U.username userUsername,
    U.bio userBio,
    U.image userImage
  </sql>

  <sql id="selectArticles">
    select
    A.id articleId,
    A.slug articleSlug,
    A.title articleTitle,
    A.description articleDescription,
    A.body articleBody,
    A.user_id articleUserId,
    A.created_at articleCreatedAt,
    A.updated_at articleUpdatedAt,
    T.name tagName,
    <include refid="profileColumns"/>
    from
    articles A
    left join article_tags AT on A.id = AT.article_id
    left join tags T on T.id = AT.tag_id
    left join users U on U.id = A.user_id
  </sql>

  <sql id="selectArticleIds">
    select
    DISTINCT(A.id) articleId, A.created_at
    from
    articles A
    left join article_tags AT on A.id = AT.article_id
    left join tags T on T.id = AT.tag_id
  </sql>

  <select id="findBySlug" resultMap="ArticleWithSummary">
    <include refid="selectArticles"/>
    where A.slug = #{slug}
  </select>

  <insert id="insert">
    insert into articles(id, slug, title, description, body, user_id, created_at, updated_at)
    values(
    #{article.id},
    #{article.slug},
    #{article.title},
    #{article.description},
    #{article.body},
    #{article.userId},
    #{article.createdAt},
    #{article.updatedAt})
  </insert>

  <update id="update">
    update articles set
    title=#{article.title},
    body=#{article.body},
    slug=#{article.slug},
    description=#{article.description},
    updated_at=#{article.updatedAt}
    where id = #{article.id}
  </update>

  <delete id="delete">
    delete from articles where id = #{article.id}
  </delete>

  <select id="fetchIdsByQuery" resultMap="articleId">
    <include refid="selectArticleIds" />
    <where>
      <if test="tag != null">
        T.name = #{tag}
      </if>
    </where>
    order by A.created_at desc
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="countByTagAndAuthor" resultType="java.lang.Integer">
    select
    count(DISTINCT A.id)
    from
    articles A
    left join article_tags AT on A.id = AT.article_id
    left join tags T on T.id = AT.tag_id
    <where>
      <if test="tag != null">
        T.name = #{tag}
      </if>
    </where>
  </select>

  <select id="findAllByIds" resultMap="ArticleWithSummary">
    <include refid="selectArticles"/>
    where A.id in
    <foreach index="index" collection="articleIds" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
    order by A.created_at desc
  </select>

  <select id="findArticlesOfAuthors" resultMap="ArticleWithSummary">
    <include refid="selectArticles"/>
    where A.user_id in
    <foreach index="index" collection="authors" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
    limit #{page.offset}, #{page.limit}
  </select>

  <select id="countFeedSize" resultType="java.lang.Integer">
    select count(1) from articles A where A.user_id in
    <foreach collection="authors" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>

  <resultMap id="article" type="com.realworld.conduit.domain.object.Article">
    <id column="id" property="id"/>
    <result column="userId" property="userId"/>
    <result column="title" property="title"/>
    <result column="slug" property="slug"/>
    <result column="description" property="description"/>
    <result column="body" property="body"/>
    <result column="created_at" property="createdAt"/>
    <result column="updated_at" property="updatedAt"/>
    <collection property="tags" ofType="arraylist" resultMap="tag"/>
  </resultMap>

  <resultMap id="tag" type="com.realworld.conduit.domain.object.Tag">
    <id column="id" property="id"/>
    <result column="name" property="name"/>
  </resultMap>

  <resultMap id="articleId" type="string">
    <id javaType="string" column="articleId"/>
  </resultMap>

  <resultMap id="profile" type="com.realworld.conduit.domain.object.Profile">
    <id column="userId" property="id"/>
    <result column="userUsername" property="username"/>
    <result column="userBio" property="bio"/>
    <result column="userImage" property="image"/>
  </resultMap>

  <resultMap id="ArticleWithSummary" type="com.realworld.conduit.domain.object.ArticleWithSummary">
    <id column="articleId" property="id"/>
    <result column="articleSlug" property="slug"/>
    <result column="articleTitle" property="title"/>
    <result column="articleDescription" property="description"/>
    <result column="articleBody" property="body"/>
    <result column="articleCreatedAt" property="createdAt"/>
    <result column="articleUpdatedAt" property="updatedAt"/>
    <association property="authorProfile" resultMap="profile"/>
    <collection property="tagList" javaType="list" ofType="string">
      <result column="tagName"/>
    </collection>
  </resultMap>
</mapper>
